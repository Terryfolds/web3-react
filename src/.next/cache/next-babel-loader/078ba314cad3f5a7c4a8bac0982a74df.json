{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jesh\\\\Desktop\\\\000O1T\\\\reward-checker\\\\src\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\nimport { NoEthereumProviderError, UserRejectedRequestError as UserRejectedRequestErrorInjected } from '@web3-react/injected-connector';\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector';\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector';\nimport { Web3Provider } from '@ethersproject/providers';\nimport { formatEther } from '@ethersproject/units';\nimport { useEagerConnect, useInactiveListener } from '../hooks';\nimport { injected } from '../connectors';\nimport { Spinner } from '../components/Spinner';\nvar ConnectorNames;\n\n(function (ConnectorNames) {\n  ConnectorNames[\"Injected\"] = \"Connect Wallet\";\n})(ConnectorNames || (ConnectorNames = {}));\n\nconst connectorsByName = {\n  [ConnectorNames.Injected]: injected\n};\n\nfunction getErrorMessage(error) {\n  if (error instanceof NoEthereumProviderError) {\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.';\n  } else if (error instanceof UnsupportedChainIdError) {\n    return \"You're connected to an unsupported network.\";\n  } else if (error instanceof UserRejectedRequestErrorInjected || error instanceof UserRejectedRequestErrorWalletConnect || error instanceof UserRejectedRequestErrorFrame) {\n    return 'Please authorize this website to access your Ethereum account.';\n  } else {\n    console.error(error);\n    return 'An unknown error occurred. Check the console for more details.';\n  }\n}\n\nfunction getLibrary(provider) {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library;\n}\n\nexport default function () {\n  return __jsx(Web3ReactProvider, {\n    getLibrary: getLibrary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Account() {\n  const {\n    account\n  } = useWeb3React();\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Account\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, account === null ? '-' : account ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}` : ''));\n}\n\nfunction Balance() {\n  const {\n    account,\n    library,\n    chainId\n  } = useWeb3React();\n  const [balance, setBalance] = React.useState();\n  React.useEffect(() => {\n    if (!!account && !!library) {\n      let stale = false;\n      library.getBalance(account).then(balance => {\n        if (!stale) {\n          setBalance(balance);\n        }\n      }).catch(() => {\n        if (!stale) {\n          setBalance(null);\n        }\n      });\n      return () => {\n        stale = true;\n        setBalance(undefined);\n      };\n    }\n  }, [account, library, chainId]); // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"BNB Balance\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, balance === null ? 'Error' : balance ? `${formatEther(balance).substring(0, 8)}` : ''));\n}\n\nfunction Header() {\n  const {\n    active,\n    error\n  } = useWeb3React();\n  return __jsx(React.Fragment, null, __jsx(\"h3\", {\n    style: {\n      display: 'grid',\n      gridGap: '1rem',\n      gridTemplateColumns: '1fr 1fr',\n      maxWidth: '20rem',\n      lineHeight: '2rem',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, __jsx(Account, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }), __jsx(Balance, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction App() {\n  const context = useWeb3React();\n  const {\n    connector,\n    library,\n    chainId,\n    account,\n    activate,\n    deactivate,\n    active,\n    error\n  } = context; // handle logic to recognize the connector currently being activated\n\n  const [activatingConnector, setActivatingConnector] = React.useState();\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]); // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n\n  const triedEager = useEagerConnect(); // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n\n  useInactiveListener(!triedEager || !!activatingConnector);\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      display: 'grid',\n      gridGap: '1rem',\n      gridTemplateColumns: '1fr 1fr',\n      maxWidth: '30rem',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, Object.keys(connectorsByName).map(name => {\n    const currentConnector = connectorsByName[name];\n    const activating = currentConnector === activatingConnector;\n    const connected = currentConnector === connector;\n    const disabled = !triedEager || !!activatingConnector || connected || !!error;\n    return __jsx(\"button\", {\n      style: {\n        height: '3rem',\n        borderRadius: '1rem',\n        borderColor: activating ? 'orange' : connected ? 'green' : 'unset',\n        cursor: disabled ? 'unset' : 'pointer',\n        position: 'relative'\n      },\n      disabled: disabled,\n      key: name,\n      onClick: () => {\n        setActivatingConnector(currentConnector);\n        activate(connectorsByName[name]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        color: 'black',\n        margin: '0 0 0 1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, activating && __jsx(Spinner, {\n      color: 'black',\n      style: {\n        height: '25%',\n        marginLeft: '-1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 32\n      }\n    })), name);\n  }), (active || error) && __jsx(\"button\", {\n    style: {\n      height: '3rem',\n      margin: '0 0 0 1rem',\n      borderRadius: '1rem',\n      borderColor: 'red',\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      deactivate();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, \"Disconnect\"), !!error && __jsx(\"h4\", {\n    style: {\n      marginTop: '1rem',\n      marginBottom: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 23\n    }\n  }, getErrorMessage(error))));\n}","map":{"version":3,"sources":["C:/Users/jesh/Desktop/000O1T/reward-checker/src/pages/index.tsx"],"names":["React","Web3ReactProvider","useWeb3React","UnsupportedChainIdError","NoEthereumProviderError","UserRejectedRequestError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","UserRejectedRequestErrorFrame","Web3Provider","formatEther","useEagerConnect","useInactiveListener","injected","Spinner","ConnectorNames","connectorsByName","Injected","getErrorMessage","error","console","getLibrary","provider","library","pollingInterval","Account","account","substring","length","Balance","chainId","balance","setBalance","useState","useEffect","stale","getBalance","then","catch","undefined","Header","active","display","gridGap","gridTemplateColumns","maxWidth","lineHeight","margin","App","context","connector","activate","deactivate","activatingConnector","setActivatingConnector","triedEager","Object","keys","map","name","currentConnector","activating","connected","disabled","height","borderRadius","borderColor","cursor","position","top","left","alignItems","color","marginLeft","marginTop","marginBottom"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,YAA5B,EAA0CC,uBAA1C,QAAyE,kBAAzE;AACA,SACEC,uBADF,EAEEC,wBAAwB,IAAIC,gCAF9B,QAGO,gCAHP;AAIA,SAASD,wBAAwB,IAAIE,qCAArC,QAAkF,qCAAlF;AACA,SAASF,wBAAwB,IAAIG,6BAArC,QAA0E,6BAA1E;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAEA,SAASC,eAAT,EAA0BC,mBAA1B,QAAqD,UAArD;AACA,SACEC,QADF,QAEO,eAFP;AAGA,SAASC,OAAT,QAAwB,uBAAxB;IAEKC,c;;WAAAA,c;AAAAA,EAAAA,c;GAAAA,c,KAAAA,c;;AAIL,MAAMC,gBAA4D,GAAG;AACnE,GAACD,cAAc,CAACE,QAAhB,GAA2BJ;AADwC,CAArE;;AAIA,SAASK,eAAT,CAAyBC,KAAzB,EAAuC;AACrC,MAAIA,KAAK,YAAYf,uBAArB,EAA8C;AAC5C,WAAO,6GAAP;AACD,GAFD,MAEO,IAAIe,KAAK,YAAYhB,uBAArB,EAA8C;AACnD,WAAO,6CAAP;AACD,GAFM,MAEA,IACLgB,KAAK,YAAYb,gCAAjB,IACAa,KAAK,YAAYZ,qCADjB,IAEAY,KAAK,YAAYX,6BAHZ,EAIL;AACA,WAAO,gEAAP;AACD,GANM,MAMA;AACLY,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,WAAO,gEAAP;AACD;AACF;;AAED,SAASE,UAAT,CAAoBC,QAApB,EAAiD;AAC/C,QAAMC,OAAO,GAAG,IAAId,YAAJ,CAAiBa,QAAjB,CAAhB;AACAC,EAAAA,OAAO,CAACC,eAAR,GAA0B,KAA1B;AACA,SAAOD,OAAP;AACD;;AAED,eAAe,YAAW;AACxB,SACE,MAAC,iBAAD;AAAmB,IAAA,UAAU,EAAEF,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,SAASI,OAAT,GAAmB;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAcxB,YAAY,EAAhC;AAEA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGwB,OAAO,KAAK,IAAZ,GACG,GADH,GAEGA,OAAO,GACN,GAAEA,OAAO,CAACC,SAAR,CAAkB,CAAlB,EAAqB,CAArB,CAAwB,MAAKD,OAAO,CAACC,SAAR,CAAkBD,OAAO,CAACE,MAAR,GAAiB,CAAnC,CAAsC,EAD/D,GAEP,EALN,CAFF,CADF;AAYD;;AAED,SAASC,OAAT,GAAmB;AACjB,QAAM;AAAEH,IAAAA,OAAF;AAAWH,IAAAA,OAAX;AAAoBO,IAAAA;AAApB,MAAgC5B,YAAY,EAAlD;AAEA,QAAM,CAAC6B,OAAD,EAAUC,UAAV,IAAwBhC,KAAK,CAACiC,QAAN,EAA9B;AACAjC,EAAAA,KAAK,CAACkC,SAAN,CAAgB,MAAW;AACzB,QAAI,CAAC,CAACR,OAAF,IAAa,CAAC,CAACH,OAAnB,EAA4B;AAC1B,UAAIY,KAAK,GAAG,KAAZ;AAEAZ,MAAAA,OAAO,CACJa,UADH,CACcV,OADd,EAEGW,IAFH,CAESN,OAAD,IAAkB;AACtB,YAAI,CAACI,KAAL,EAAY;AACVH,UAAAA,UAAU,CAACD,OAAD,CAAV;AACD;AACF,OANH,EAOGO,KAPH,CAOS,MAAM;AACX,YAAI,CAACH,KAAL,EAAY;AACVH,UAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,OAXH;AAaA,aAAO,MAAM;AACXG,QAAAA,KAAK,GAAG,IAAR;AACAH,QAAAA,UAAU,CAACO,SAAD,CAAV;AACD,OAHD;AAID;AACF,GAtBD,EAsBG,CAACb,OAAD,EAAUH,OAAV,EAAmBO,OAAnB,CAtBH,EAJiB,CA0Be;;AAEhC,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,OAAO,KAAK,IAAZ,GAAmB,OAAnB,GAA6BA,OAAO,GAAI,GAAErB,WAAW,CAACqB,OAAD,CAAX,CAAqBJ,SAArB,CAA+B,CAA/B,EAAkC,CAAlC,CAAqC,EAA3C,GAA+C,EAA1F,CAFF,CADF;AAMD;;AAED,SAASa,MAAT,GAAkB;AAChB,QAAM;AAAEC,IAAAA,MAAF;AAAUtB,IAAAA;AAAV,MAAoBjB,YAAY,EAAtC;AAEA,SACE,4BACE;AACE,IAAA,KAAK,EAAE;AACLwC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,OAAO,EAAE,MAFJ;AAGLC,MAAAA,mBAAmB,EAAE,SAHhB;AAILC,MAAAA,QAAQ,EAAE,OAJL;AAKLC,MAAAA,UAAU,EAAE,MALP;AAMLC,MAAAA,MAAM,EAAE;AANH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF,CADF;AAiBD;;AAED,SAASC,GAAT,GAAe;AACb,QAAMC,OAAO,GAAG/C,YAAY,EAA5B;AACA,QAAM;AAAEgD,IAAAA,SAAF;AAAa3B,IAAAA,OAAb;AAAsBO,IAAAA,OAAtB;AAA+BJ,IAAAA,OAA/B;AAAwCyB,IAAAA,QAAxC;AAAkDC,IAAAA,UAAlD;AAA8DX,IAAAA,MAA9D;AAAsEtB,IAAAA;AAAtE,MAAgF8B,OAAtF,CAFa,CAIb;;AACA,QAAM,CAACI,mBAAD,EAAsBC,sBAAtB,IAAgDtD,KAAK,CAACiC,QAAN,EAAtD;AACAjC,EAAAA,KAAK,CAACkC,SAAN,CAAgB,MAAM;AACpB,QAAImB,mBAAmB,IAAIA,mBAAmB,KAAKH,SAAnD,EAA8D;AAC5DI,MAAAA,sBAAsB,CAACf,SAAD,CAAtB;AACD;AACF,GAJD,EAIG,CAACc,mBAAD,EAAsBH,SAAtB,CAJH,EANa,CAYb;;AACA,QAAMK,UAAU,GAAG5C,eAAe,EAAlC,CAba,CAeb;;AACAC,EAAAA,mBAAmB,CAAC,CAAC2C,UAAD,IAAe,CAAC,CAACF,mBAAlB,CAAnB;AAEA,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AACE,IAAA,KAAK,EAAE;AACLX,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,OAAO,EAAE,MAFJ;AAGLC,MAAAA,mBAAmB,EAAE,SAHhB;AAILC,MAAAA,QAAQ,EAAE,OAJL;AAKLE,MAAAA,MAAM,EAAE;AALH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGS,MAAM,CAACC,IAAP,CAAYzC,gBAAZ,EAA8B0C,GAA9B,CAAkCC,IAAI,IAAI;AACzC,UAAMC,gBAAgB,GAAG5C,gBAAgB,CAAC2C,IAAD,CAAzC;AACA,UAAME,UAAU,GAAGD,gBAAgB,KAAKP,mBAAxC;AACA,UAAMS,SAAS,GAAGF,gBAAgB,KAAKV,SAAvC;AACA,UAAMa,QAAQ,GAAG,CAACR,UAAD,IAAe,CAAC,CAACF,mBAAjB,IAAwCS,SAAxC,IAAqD,CAAC,CAAC3C,KAAxE;AAEA,WACE;AACE,MAAA,KAAK,EAAE;AACL6C,QAAAA,MAAM,EAAE,MADH;AAELC,QAAAA,YAAY,EAAE,MAFT;AAGLC,QAAAA,WAAW,EAAEL,UAAU,GAAG,QAAH,GAAcC,SAAS,GAAG,OAAH,GAAa,OAHtD;AAILK,QAAAA,MAAM,EAAEJ,QAAQ,GAAG,OAAH,GAAa,SAJxB;AAKLK,QAAAA,QAAQ,EAAE;AALL,OADT;AAQE,MAAA,QAAQ,EAAEL,QARZ;AASE,MAAA,GAAG,EAAEJ,IATP;AAUE,MAAA,OAAO,EAAE,MAAM;AACbL,QAAAA,sBAAsB,CAACM,gBAAD,CAAtB;AACAT,QAAAA,QAAQ,CAACnC,gBAAgB,CAAC2C,IAAD,CAAjB,CAAR;AACD,OAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeE;AACE,MAAA,KAAK,EAAE;AACLS,QAAAA,QAAQ,EAAE,UADL;AAELC,QAAAA,GAAG,EAAE,GAFA;AAGLC,QAAAA,IAAI,EAAE,GAHD;AAILN,QAAAA,MAAM,EAAE,MAJH;AAKLtB,QAAAA,OAAO,EAAE,MALJ;AAML6B,QAAAA,UAAU,EAAE,QANP;AAOLC,QAAAA,KAAK,EAAE,OAPF;AAQLzB,QAAAA,MAAM,EAAE;AARH,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYGc,UAAU,IAAI,MAAC,OAAD;AAAS,MAAA,KAAK,EAAE,OAAhB;AAAyB,MAAA,KAAK,EAAE;AAAEG,QAAAA,MAAM,EAAE,KAAV;AAAiBS,QAAAA,UAAU,EAAE;AAA7B,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZjB,CAfF,EA6BGd,IA7BH,CADF;AAiCD,GAvCA,CATH,EAiDG,CAAClB,MAAM,IAAItB,KAAX,KACG;AACE,IAAA,KAAK,EAAE;AACL6C,MAAAA,MAAM,EAAE,MADH;AAELjB,MAAAA,MAAM,EAAE,YAFH;AAGLkB,MAAAA,YAAY,EAAE,MAHT;AAILC,MAAAA,WAAW,EAAE,KAJR;AAKLC,MAAAA,MAAM,EAAE;AALH,KADT;AAQE,IAAA,OAAO,EAAE,MAAM;AACbf,MAAAA,UAAU;AACX,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlDN,EAkEK,CAAC,CAACjC,KAAF,IAAW;AAAI,IAAA,KAAK,EAAE;AAAEuD,MAAAA,SAAS,EAAE,MAAb;AAAqBC,MAAAA,YAAY,EAAE;AAAnC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsDzD,eAAe,CAACC,KAAD,CAArE,CAlEhB,CAFF,CADF;AA4ED","sourcesContent":["import React from 'react'\r\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\r\n} from '@web3-react/injected-connector'\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { formatEther } from '@ethersproject/units'\r\n\r\nimport { useEagerConnect, useInactiveListener } from '../hooks'\r\nimport {\r\n  injected\r\n} from '../connectors'\r\nimport { Spinner } from '../components/Spinner'\r\n\r\nenum ConnectorNames {\r\n  Injected = 'Connect Wallet'\r\n}\r\n\r\nconst connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected\r\n}\r\n\r\nfunction getErrorMessage(error: Error) {\r\n  if (error instanceof NoEthereumProviderError) {\r\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\r\n  } else if (error instanceof UnsupportedChainIdError) {\r\n    return \"You're connected to an unsupported network.\"\r\n  } else if (\r\n    error instanceof UserRejectedRequestErrorInjected ||\r\n    error instanceof UserRejectedRequestErrorWalletConnect ||\r\n    error instanceof UserRejectedRequestErrorFrame\r\n  ) {\r\n    return 'Please authorize this website to access your Ethereum account.'\r\n  } else {\r\n    console.error(error)\r\n    return 'An unknown error occurred. Check the console for more details.'\r\n  }\r\n}\r\n\r\nfunction getLibrary(provider: any): Web3Provider {\r\n  const library = new Web3Provider(provider)\r\n  library.pollingInterval = 12000\r\n  return library\r\n}\r\n\r\nexport default function() {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <App />\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nfunction Account() {\r\n  const { account } = useWeb3React()\r\n\r\n  return (\r\n    <>\r\n      <span>Account</span>\r\n      <span>\r\n        {account === null\r\n          ? '-'\r\n          : account\r\n          ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}`\r\n          : ''}\r\n      </span>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Balance() {\r\n  const { account, library, chainId } = useWeb3React()\r\n\r\n  const [balance, setBalance] = React.useState()\r\n  React.useEffect((): any => {\r\n    if (!!account && !!library) {\r\n      let stale = false\r\n\r\n      library\r\n        .getBalance(account)\r\n        .then((balance: any) => {\r\n          if (!stale) {\r\n            setBalance(balance)\r\n          }\r\n        })\r\n        .catch(() => {\r\n          if (!stale) {\r\n            setBalance(null)\r\n          }\r\n        })\r\n\r\n      return () => {\r\n        stale = true\r\n        setBalance(undefined)\r\n      }\r\n    }\r\n  }, [account, library, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\r\n\r\n  return (\r\n    <>\r\n      <span>BNB Balance</span>\r\n      <span>{balance === null ? 'Error' : balance ? `${formatEther(balance).substring(0, 8)}` : ''}</span>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Header() {\r\n  const { active, error } = useWeb3React()\r\n\r\n  return (\r\n    <>\r\n      <h3\r\n        style={{\r\n          display: 'grid',\r\n          gridGap: '1rem',\r\n          gridTemplateColumns: '1fr 1fr',\r\n          maxWidth: '20rem',\r\n          lineHeight: '2rem',\r\n          margin: 'auto'\r\n        }}\r\n      >\r\n        <Account />\r\n        <Balance />\r\n      </h3>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  const context = useWeb3React<Web3Provider>()\r\n  const { connector, library, chainId, account, activate, deactivate, active, error } = context\r\n\r\n  // handle logic to recognize the connector currently being activated\r\n  const [activatingConnector, setActivatingConnector] = React.useState<any>()\r\n  React.useEffect(() => {\r\n    if (activatingConnector && activatingConnector === connector) {\r\n      setActivatingConnector(undefined)\r\n    }\r\n  }, [activatingConnector, connector])\r\n\r\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\r\n  const triedEager = useEagerConnect()\r\n\r\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\r\n  useInactiveListener(!triedEager || !!activatingConnector)\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div\r\n        style={{\r\n          display: 'grid',\r\n          gridGap: '1rem',\r\n          gridTemplateColumns: '1fr 1fr',\r\n          maxWidth: '30rem',\r\n          margin: 'auto'\r\n        }}\r\n      >\r\n        {Object.keys(connectorsByName).map(name => {\r\n          const currentConnector = connectorsByName[name]\r\n          const activating = currentConnector === activatingConnector\r\n          const connected = currentConnector === connector\r\n          const disabled = !triedEager || !!activatingConnector || connected || !!error\r\n\r\n          return (\r\n            <button\r\n              style={{\r\n                height: '3rem',\r\n                borderRadius: '1rem',\r\n                borderColor: activating ? 'orange' : connected ? 'green' : 'unset',\r\n                cursor: disabled ? 'unset' : 'pointer',\r\n                position: 'relative'\r\n              }}\r\n              disabled={disabled}\r\n              key={name}\r\n              onClick={() => {\r\n                setActivatingConnector(currentConnector)\r\n                activate(connectorsByName[name])\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  position: 'absolute',\r\n                  top: '0',\r\n                  left: '0',\r\n                  height: '100%',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  color: 'black',\r\n                  margin: '0 0 0 1rem'\r\n                }}\r\n              >\r\n                {activating && <Spinner color={'black'} style={{ height: '25%', marginLeft: '-1rem' }} />}\r\n              </div>\r\n              {name}\r\n            </button>\r\n          )\r\n        })}\r\n        {(active || error) && (\r\n            <button\r\n              style={{\r\n                height: '3rem',\r\n                margin: '0 0 0 1rem',\r\n                borderRadius: '1rem',\r\n                borderColor: 'red',\r\n                cursor: 'pointer'\r\n              }}\r\n              onClick={() => {\r\n                deactivate()\r\n              }}\r\n            >\r\n              Disconnect\r\n            </button>\r\n          )}\r\n\r\n          {!!error && <h4 style={{ marginTop: '1rem', marginBottom: '0' }}>{getErrorMessage(error)}</h4>}\r\n\r\n      </div>\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}