{"ast":null,"code":"import { InjectedConnector } from '@web3-react/injected-connector';\nimport { BscConnector } from '@binance-chain/bsc-connector';\nimport { NetworkConnector } from '@web3-react/network-connector';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector';\nimport { LedgerConnector } from '@web3-react/ledger-connector';\nimport { TrezorConnector } from '@web3-react/trezor-connector';\nimport { LatticeConnector } from '@web3-react/lattice-connector';\nimport { FrameConnector } from '@web3-react/frame-connector';\nimport { AuthereumConnector } from '@web3-react/authereum-connector';\nimport { FortmaticConnector } from '@web3-react/fortmatic-connector';\nimport { MagicConnector } from '@web3-react/magic-connector';\nimport { PortisConnector } from '@web3-react/portis-connector';\nimport { TorusConnector } from '@web3-react/torus-connector';\nconst POLLING_INTERVAL = 12000;\nconst RPC_URLS = {\n  1: process.env.RPC_URL_1,\n  4: process.env.RPC_URL_4\n};\nexport const injected = new InjectedConnector({\n  supportedChainIds: [56, 97]\n});\nexport const bscConnector = new BscConnector({\n  supportedChainIds: [56]\n});\nexport const network = new NetworkConnector({\n  urls: {\n    1: RPC_URLS[1],\n    4: RPC_URLS[4]\n  },\n  defaultChainId: 1\n});\nexport const walletconnect = new WalletConnectConnector({\n  rpc: {\n    1: RPC_URLS[1]\n  },\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL\n});\nexport const walletlink = new WalletLinkConnector({\n  url: RPC_URLS[1],\n  appName: 'web3-react example'\n});\nexport const ledger = new LedgerConnector({\n  chainId: 1,\n  url: RPC_URLS[1],\n  pollingInterval: POLLING_INTERVAL\n});\nexport const trezor = new TrezorConnector({\n  chainId: 1,\n  url: RPC_URLS[1],\n  pollingInterval: POLLING_INTERVAL,\n  manifestEmail: 'dummy@abc.xyz',\n  manifestAppUrl: 'http://localhost:1234'\n});\nexport const lattice = new LatticeConnector({\n  chainId: 4,\n  appName: 'web3-react',\n  url: RPC_URLS[4]\n});\nexport const frame = new FrameConnector({\n  supportedChainIds: [1]\n});\nexport const authereum = new AuthereumConnector({\n  chainId: 42\n});\nexport const fortmatic = new FortmaticConnector({\n  apiKey: process.env.FORTMATIC_API_KEY,\n  chainId: 4\n});\nexport const magic = new MagicConnector({\n  apiKey: process.env.MAGIC_API_KEY,\n  chainId: 4,\n  email: 'hello@example.org'\n});\nexport const portis = new PortisConnector({\n  dAppId: process.env.PORTIS_DAPP_ID,\n  networks: [1, 100]\n});\nexport const torus = new TorusConnector({\n  chainId: 1\n});","map":null,"metadata":{},"sourceType":"module"}